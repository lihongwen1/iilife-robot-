apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'


android {
    signingConfigs {
        ilife {
            storeFile file('E:\\as_workspace\\ilife\\keystore_ilife\\ilife.jks')
            storePassword '123456'
            keyAlias = 'ilife'
            keyPassword '123456'
        }
    }
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "com.ilife.iliferobot"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 30
        versionName '3.0.0'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        flavorDimensions  "default"
        signingConfig signingConfigs.debug
    }
    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String","environment","\"product\"")

        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String","environment","\"product\"")
        }
    }
    repositories {
        jcenter()
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    productFlavors {
        /* 中国*/
        _China_Test {
            dimension "default"
            applicationId "com.ilife.iliferobot_test"
            signingConfig signingConfigs.ilife
            buildConfigField("int", "Area", "0")
            resValue "string", "app_name", "ILIFE-ROBOT"
            buildConfigField("String", "SERVICE_NAME_X430", "\"ILife-X430-CN\"")
            buildConfigField("String", "SERVICE_NAME_X780", "\"ILife-X780-CN\"")
            buildConfigField("String", "SERVICE_NAME_X782", "\"ILife-X782-CN\"")
            buildConfigField("String", "SERVICE_NAME_X785", "\"ILife-X785-CN\"")
            buildConfigField("String", "SERVICE_NAME_X787", "\"ILife-X787-CN\"")
            buildConfigField("String", "SERVICE_NAME_X800", "\"ILife-X800-CN\"")
            buildConfigField("String", "SERVICE_NAME_X900", "\"ILife-X900-CN\"")
        }
        /* 中国*/
        _China {
            dimension "default"
            applicationId "com.ilife.iliferobot_cn"
            signingConfig signingConfigs.ilife
            buildConfigField("int", "Area", "0")
            resValue "string", "app_name", "智意机器人"
            buildConfigField("String", "SERVICE_NAME_X430", "\"ILife-X430-CN\"")
            buildConfigField("String", "SERVICE_NAME_X780", "\"ILife-X780-CN\"")
            buildConfigField("String", "SERVICE_NAME_X782", "\"ILife-X782-CN\"")
            buildConfigField("String", "SERVICE_NAME_X785", "\"ILife-X785-CN\"")
            buildConfigField("String", "SERVICE_NAME_X787", "\"ILife-X787-CN\"")
            buildConfigField("String", "SERVICE_NAME_X800", "\"ILife-X800-CN\"")
            buildConfigField("String", "SERVICE_NAME_X900", "\"ILife-X900-CN\"")
        }
        /*东南亚*/
        _SouthEast_Asia {
            dimension  "default"
            applicationId "com.ilife.iliferobot_as"
            signingConfig signingConfigs.ilife
            buildConfigField("int", "Area", "1")
            resValue "string", "app_name", "ILIFE Robot Asia"
            buildConfigField("String", "SERVICE_NAME_X430", "\"ILife-X430-AS\"")
            buildConfigField("String", "SERVICE_NAME_X780", "\"ILife-X780-AS\"")
            buildConfigField("String", "SERVICE_NAME_X782", "\"ILife-X782-AS\"")
            buildConfigField("String", "SERVICE_NAME_X785", "\"ILife-X785-AS\"")
            buildConfigField("String", "SERVICE_NAME_X787", "\"ILife-X787-AS\"")
            buildConfigField("String", "SERVICE_NAME_X800", "\"ILife-X800-AS\"")
            buildConfigField("String", "SERVICE_NAME_X900", "\"ILife-X900-AS\"")
        }
        /*美国*/
        _America {
            dimension "default"
            resValue "string", "app_name", "ILIFE Robot America"
            buildConfigField("String", "SERVICE_NAME_X430", "\"ILife-X430-US\"")
            buildConfigField("String", "SERVICE_NAME_X780", "\"ILife-X780-US\"")
            buildConfigField("String", "SERVICE_NAME_X782", "\"ILife-X782-US\"")
            buildConfigField("String", "SERVICE_NAME_X785", "\"ILife-X785-US\"")
            buildConfigField("String", "SERVICE_NAME_X787", "\"ILife-X787-US\"")
            buildConfigField("String", "SERVICE_NAME_X800", "\"ILife-X800-US\"")
            buildConfigField("String", "SERVICE_NAME_X900", "\"ILife-X900-US\"")
            buildConfigField("int", "Area", "3")
            applicationId "com.ilife.iliferobot_us"
            signingConfig signingConfigs.ilife
        }
        /*欧洲*/
        _Europe {
            dimension "default"
            resValue "string", "app_name", "ILIFE Robot Europe"
            buildConfigField("String", "SERVICE_NAME_X430", "\"ILife-X430-EU\"")
            buildConfigField("String", "SERVICE_NAME_X780", "\"ILife-X780-EU\"")
            buildConfigField("String", "SERVICE_NAME_X782", "\"ILife-X782-EU\"")
            buildConfigField("String", "SERVICE_NAME_X785", "\"ILife-X785-EU\"")
            buildConfigField("String", "SERVICE_NAME_X787", "\"ILife-X787-EU\"")
            buildConfigField("String", "SERVICE_NAME_X800", "\"ILife-X800-EU\"")
            buildConfigField("String", "SERVICE_NAME_X900", "\"ILife-X900-EU\"")
            buildConfigField("int", "Area", "4")
            applicationId "com.ilife.iliferobot_eu"
            signingConfig signingConfigs.ilife
        }
    }

    // 动态修改打包的文件名
    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 输出apk名称为one_v1.0.0.apk
                        def fileName = "${variant.productFlavors[0].name}_v${defaultConfig.versionName}.apk"
                        outputFileName = fileName
                    }
            }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.2.0-beta01', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha05'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'com.journeyapps:zxing-android-embedded:3.4.0'
    implementation 'com.google.android.material:material:1.1.0-alpha06'
    testImplementation 'junit:junit:4.13-beta-3'
    implementation project(':PushSDK')
    implementation files('libs/android-async-http-1.4.9.jar')
    implementation files('libs/happy-dns-0.2.7.jar')
    implementation files('libs/httpclient-4.4.1.1.jar')
    implementation files('libs/qiniu-android-sdk-7.0.9.jar')
    implementation files('libs/volly-1.0.11.jar')
    implementation 'com.wang.avi:library:1.0.0'
    implementation 'com.nineoldandroids:library:2.4.0'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-alpha05'
    implementation 'com.android.support:multidex:'
    implementation 'com.airbnb.android:lottie:3.0.3'
    implementation 'io.reactivex.rxjava2:rxjava:2.0.7'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation files('libs/ltlink2.jar')
    implementation files('libs/easylink_ftc_out.jar')
    implementation files('libs/gson-2.8.0.jar')
    implementation files('libs/jackson-2.3.2.jar')
    implementation files('libs/java_websocket.jar')
    implementation 'com.jakewharton:butterknife:10.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'
    implementation 'com.github.barteksc:android-pdf-viewer:2.8.2'
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.3@aar'
    implementation files('libs/ac-service-android-v1.6.3.jar')
    implementation files('libs/hiflying-iots-android-smartlink-8.2.0.jar')
    implementation 'commons-codec:commons-codec:20041127.091804'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.1.0-alpha06'
    implementation 'com.badoo.mobile:android-weak-handler:1.1'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-andx-7'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-andx-7'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.lijiankun24:shadowlayout:1.1.0'
    implementation 'com.github.zackratos.ultimatebar:ultimatebar3:3.1.1'
    implementation files('libs/bugly_crash_release.jar')
    implementation 'com.orhanobut:logger:2.2.0'
}
